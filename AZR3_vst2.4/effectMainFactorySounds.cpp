#include "effectMain.h"

/*
	OK, this "factory sound" stuff looks weird,
	but it works just perfect. I wrote a mini tool
	which analyzes a Cubase program bank file and
	writes just these lines. This makes it very easy
	to implement "factory sounds".
*/
void effectMain::setFactorySounds()
{
	int x = 0;
	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.5000f,
			0.2000f,
			0.4800f,
			0.4300f,
			0.3300f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.3400f,
			0.3000f,
			1.0000f,
			0.6500f,
			0.0000f,
			1.0000f,
			0.1900f,
			0.5400f,
			0.0000f,
			0.2300f,
			0.1500f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			1.0000f,
			0.2100f,
			0.3400f,
			0.3700f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3010f,
			0.3510f,
			0.0000f,
			1.0000f,
			0.5900f,
			0.9400f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.4400f,
			1.0000f,
			0.2700f,
			0.1800f,
			1.0000f,
			0.0000f,
			0.0900f,
			0.4800f,
			0.0470f,
			0.6500f,
			0.5000f,
			0.4200f,
			1.0000f,
			1.0000f,
			0.4609f,
			0.6700f,
			0.0000f,
			0.0000f,
			1.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "muddy moods SPLIT");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.5200f,
			0.2000f,
			0.4000f,
			0.5000f,
			1.0000f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.7900f,
			0.2300f,
			1.0000f,
			1.0000f,
			1.0000f,
			1.0000f,
			1.0000f,
			1.0000f,
			1.0000f,
			1.0000f,
			1.0000f,
			1.0000f,
			1.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			1.0000f,
			0.2100f,
			0.3400f,
			0.3700f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3010f,
			0.3510f,
			0.0000f,
			1.0000f,
			0.2100f,
			0.6700f,
			0.0900f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.5000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0400f,
			0.4700f,
			0.0500f,
			0.6800f,
			0.5000f,
			0.5100f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "Volle Kante");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2200f,
			0.2000f,
			0.3000f,
			0.0000f,
			0.1000f,
			0.5000f,
			0.3700f,
			0.6000f,
			0.6600f,
			0.3900f,
			1.0000f,
			1.0000f,
			0.8800f,
			0.0000f,
			0.5700f,
			0.0000f,
			0.5500f,
			0.0000f,
			0.5100f,
			0.4600f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			1.0000f,
			0.2100f,
			0.3400f,
			0.3700f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3010f,
			0.3510f,
			0.0000f,
			1.0000f,
			0.3600f,
			0.4500f,
			0.0900f,
			0.0000f,
			0.0000f,
			0.4400f,
			1.0000f,
			0.1000f,
			0.2500f,
			1.0000f,
			0.0000f,
			0.0900f,
			0.4700f,
			0.0470f,
			0.6600f,
			0.4200f,
			0.3200f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "clean");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.5100f,
			0.2000f,
			0.0000f,
			0.7500f,
			0.2700f,
			1.0000f,
			0.3400f,
			0.6000f,
			0.3100f,
			0.5400f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0900f,
			0.4800f,
			0.0000f,
			0.3700f,
			0.1700f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			1.0000f,
			0.2100f,
			0.3400f,
			0.3700f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3010f,
			0.3510f,
			0.0000f,
			1.0000f,
			0.6300f,
			0.4100f,
			0.4400f,
			0.0000f,
			1.0000f,
			0.5600f,
			1.0000f,
			1.0000f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.0400f,
			0.6000f,
			0.0770f,
			0.7300f,
			1.0000f,
			0.6400f,
			0.0000f,
			1.0000f,
			0.4609f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "hollow SPLIT");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.3000f,
			0.3400f,
			0.3700f,
			1.0000f,
			0.6900f,
			0.6000f,
			0.0000f,
			0.5400f,
			1.0000f,
			0.2200f,
			1.0000f,
			0.0000f,
			0.0200f,
			0.0800f,
			0.0000f,
			0.2300f,
			0.1500f,
			0.1800f,
			1.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.2500f,
			0.4400f,
			1.0000f,
			0.0000f,
			0.0600f,
			0.5300f,
			0.0400f,
			0.7500f,
			0.5000f,
			0.1900f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "talking space");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.5000f,
			0.2000f,
			0.0000f,
			0.3600f,
			0.3900f,
			0.9700f,
			0.5300f,
			0.6000f,
			0.3400f,
			0.2100f,
			1.0000f,
			1.0000f,
			0.7800f,
			0.0000f,
			0.6500f,
			0.0000f,
			0.4961f,
			0.2300f,
			0.1200f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.6400f,
			0.4900f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.3100f,
			1.0000f,
			0.4500f,
			0.2700f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.4900f,
			0.0470f,
			0.6700f,
			0.2100f,
			0.5000f,
			1.0000f,
			1.0000f,
			0.4609f,
			0.0500f,
			0.0000f,
			0.0000f,
			1.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "fat amped SPLIT");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.3000f,
			0.2000f,
			0.6800f,
			0.6800f,
			0.7500f,
			0.1000f,
			0.5500f,
			0.6000f,
			0.0000f,
			0.2200f,
			1.0000f,
			0.6500f,
			1.0000f,
			1.0000f,
			0.4500f,
			0.0000f,
			0.4500f,
			1.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.4600f,
			0.1000f,
			0.3800f,
			0.2400f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0670f,
			0.7800f,
			0.5000f,
			0.2200f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "FLPs fiese Forfiesa");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.0000f,
			0.2000f,
			0.5000f,
			0.2200f,
			0.3900f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.4800f,
			1.0000f,
			1.0000f,
			0.4540f,
			0.2170f,
			0.3550f,
			0.1510f,
			0.3030f,
			0.0960f,
			0.1890f,
			0.0000f,
			1.0000f,
			0.5000f,
			0.3800f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.0000f,
			1.0000f,
			0.5100f,
			1.0000f,
			1.0000f,
			1.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7100f,
			1.0000f,
			0.1700f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "NHL");
	}

	{
		float mp[kNumParams] =
		{
			1.0000f,
			0.0000f,
			0.2000f,
			0.0000f,
			0.4300f,
			0.2000f,
			0.5000f,
			0.7000f,
			0.6000f,
			0.0000f,
			0.7000f,
			1.0000f,
			1.0000f,
			0.4300f,
			0.3050f,
			0.2400f,
			0.0990f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.6450f,
			0.0000f,
			0.7400f,
			0.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0300f,
			1.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "FLPs cool bass 1");
	}

	{
		float mp[kNumParams] =
		{
			1.0000f,
			0.0000f,
			0.2000f,
			0.0000f,
			0.5200f,
			0.1400f,
			0.5000f,
			0.7800f,
			0.6000f,
			0.0000f,
			0.7000f,
			1.0000f,
			1.0000f,
			0.4200f,
			0.3050f,
			0.1900f,
			0.1690f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.6450f,
			0.0000f,
			0.7400f,
			0.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "FLPs cool bass 2");
	}

	{
		float mp[kNumParams] =
		{
			1.0000f,
			0.0000f,
			0.2000f,
			0.0000f,
			0.5200f,
			0.2100f,
			0.5000f,
			0.7000f,
			0.6000f,
			0.0000f,
			0.4000f,
			1.0000f,
			1.0000f,
			0.2500f,
			0.1450f,
			0.0900f,
			0.0390f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.5400f,
			1.0000f,
			0.0000f,
			0.2600f,
			0.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.1000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "FLPs even cooler bass");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.7200f,
			0.2000f,
			0.0000f,
			1.0000f,
			0.3000f,
			0.0100f,
			0.5600f,
			0.6000f,
			0.0000f,
			0.2800f,
			1.0000f,
			0.1600f,
			0.5900f,
			1.0000f,
			0.0000f,
			0.9900f,
			0.3000f,
			0.4200f,
			0.8900f,
			0.2400f,
			1.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.3500f,
			1.0000f,
			0.3700f,
			0.6000f,
			1.0000f,
			1.0000f,
			0.1000f,
			0.3900f,
			0.0470f,
			1.0000f,
			1.0000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "cutter");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.7300f,
			0.0000f,
			1.0000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.1700f,
			1.0000f,
			0.7600f,
			0.3400f,
			0.0700f,
			0.1400f,
			0.5800f,
			0.2700f,
			1.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.5200f,
			0.2400f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.1100f,
			0.6800f,
			0.0570f,
			0.7700f,
			0.5000f,
			0.1100f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "MODEM");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.0400f,
			0.2000f,
			0.0000f,
			0.2100f,
			1.0000f,
			1.0000f,
			0.5200f,
			0.6000f,
			0.0000f,
			0.4500f,
			1.0000f,
			1.0000f,
			0.5900f,
			0.0000f,
			0.0000f,
			0.0500f,
			0.0000f,
			0.0200f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.7000f,
			0.2900f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.5700f,
			0.4700f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.2900f,
			0.6500f,
			0.1300f,
			0.7800f,
			0.5000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.9800f,
			1.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "sine vibra");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.5000f,
			0.2000f,
			0.4600f,
			0.5700f,
			0.3700f,
			0.2000f,
			0.6000f,
			0.6000f,
			0.4400f,
			0.2900f,
			1.0000f,
			1.0000f,
			0.8800f,
			0.3700f,
			0.7500f,
			0.0000f,
			0.5800f,
			0.5400f,
			0.0000f,
			0.0800f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.5300f,
			0.4100f,
			0.6500f,
			0.0000f,
			1.0000f,
			0.3900f,
			1.0000f,
			0.4500f,
			0.1900f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6800f,
			0.0470f,
			0.7200f,
			0.5000f,
			0.4200f,
			1.0000f,
			1.0000f,
			0.4297f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "some rotz SPLIT");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.3300f,
			0.2000f,
			1.0000f,
			0.7300f,
			0.2400f,
			1.0000f,
			0.4600f,
			0.6000f,
			0.0000f,
			0.3400f,
			1.0000f,
			1.0000f,
			0.2300f,
			0.0000f,
			0.1100f,
			0.6400f,
			0.0000f,
			0.4500f,
			0.8400f,
			0.4100f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.1600f,
			0.4800f,
			0.2100f,
			0.1000f,
			1.0000f,
			0.0000f,
			0.0400f,
			0.2500f,
			0.0570f,
			0.6100f,
			0.7100f,
			0.3800f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "thin");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.5500f,
			0.2000f,
			0.6000f,
			0.1800f,
			0.4400f,
			0.0000f,
			0.4900f,
			0.6000f,
			0.0000f,
			0.6000f,
			1.0000f,
			0.4400f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.2600f,
			0.4900f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.2800f,
			1.0000f,
			0.3400f,
			0.1900f,
			1.0000f,
			0.0000f,
			0.0400f,
			0.6400f,
			0.0770f,
			0.7700f,
			1.0000f,
			0.6900f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "angel hair");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.4500f,
			0.2000f,
			0.5300f,
			0.5600f,
			1.0000f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2400f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.2100f,
			0.2700f,
			0.6200f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0670f,
			0.7800f,
			0.7700f,
			0.4200f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "little duck");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.0000f,
			0.2000f,
			0.6200f,
			0.4500f,
			0.2400f,
			1.0000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.4500f,
			1.0000f,
			1.0000f,
			0.7900f,
			0.0000f,
			0.4300f,
			0.0000f,
			0.1800f,
			0.0000f,
			0.0000f,
			0.0800f,
			1.0000f,
			0.5700f,
			0.3500f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.4200f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "dead entertainer");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.9100f,
			0.2000f,
			0.4400f,
			0.6500f,
			0.3300f,
			0.6800f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.7900f,
			0.5800f,
			0.0000f,
			0.2600f,
			0.0000f,
			0.0000f,
			0.4400f,
			1.0000f,
			0.2100f,
			0.3400f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7200f,
			0.5000f,
			0.5000f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "resurrected entertainer");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.0100f,
			0.2000f,
			0.8500f,
			0.2300f,
			0.3600f,
			0.9900f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.3700f,
			1.0000f,
			1.0000f,
			0.4700f,
			0.3800f,
			0.2100f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.3000f,
			0.3000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "cheap B*ntempi");
	}

	{
		float mp[kNumParams] =
		{
			1.0000f,
			0.0000f,
			0.2000f,
			0.8600f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.5100f,
			0.6000f,
			0.0000f,
			0.6800f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0400f,
			0.0400f,
			1.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.6900f,
			1.0000f,
			0.9800f,
			0.1900f,
			1.0000f,
			0.0000f,
			0.0600f,
			0.6500f,
			0.0770f,
			0.7800f,
			0.5000f,
			0.2200f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "NDW lead");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "the rest is empty");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "make your own!");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "just turn the knobs-");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "-it's not very hard!");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "Still here?");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "Come on now!");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "You can't wait forever.");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "Give it a try.");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "Not?");
	}

	{
		float mp[kNumParams] =
		{
			0.0000f,
			0.2000f,
			0.2000f,
			0.0000f,
			0.0000f,
			0.7500f,
			0.5000f,
			0.6000f,
			0.6000f,
			0.0000f,
			0.2200f,
			0.0000f,
			1.0000f,
			1.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.3000f,
			0.3500f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.4000f,
			0.0000f,
			0.6600f,
			0.0000f,
			1.0000f,
			0.0000f,
			0.1000f,
			0.6500f,
			0.0470f,
			0.7800f,
			0.5000f,
			0.5000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
			0.0000f,
		};
		memcpy(programs[x].p, mp, sizeof(mp));
		strcpy(programs[x++].name, "--init--");
	}

}